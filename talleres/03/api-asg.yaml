AWSTemplateFormatVersion: 2010-09-09 #No cambia, opcional es la version del formato
Description: API de Mythical Mysfits con Auto Scaling Groups. # opcional

Mappings: # definicion de valores que queramos ocupar dentro del template
  RegionMap:
    us-east-1:
      "AmiId": "ami-09d95fab7fff3776c"
    us-east-2:
      "AmiId": "ami-026dea5602e368e96"
    us-west-2:
      "AmiId": "ami-0e34e7b9ca0ace12d"

Resources: 
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MythicalMysfitsLB
      GroupDescription: Load Balancer
      SecurityGroupIngress:
      - IpProtocol: tcp # el - indica que es un objeto de una lista
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
    InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MythicalMysfitsInstance
      GroupDescription: Instances
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000
        SourceSecurityGroupId: !GetAtt LoadBalancerSG.GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt LoadBalancerSG.GroupId
      AvailabilityZones: !GetAZs
      Listeners:
      - InstancePort: '8000'
        InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:8000/
        HealthyThreshold: '2'
        UnhealthyThreshold: '3'
        Interval: '10'
        Timeout: '5'
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - AmiId
      InstanceType: t2.micro
      KeyName: mythical-mysfits
      SecurityGroups:
        - !GetAtt InstanceSG.GroupId
      UserData: !Base64 |
        #!/bin/bash -xe
        yum install -y python37 git
        curl -O https://bootstrap.pypa.io/get-pip.py
        python3 get-pip.py
        git clone https://github.com/eloyvega/bootcamp-module-devops.git
        cd bootcamp-module-devops/backend/
        pip install -r requirements.txt
        nohup gunicorn -w 3 -b 0.0.0.0:8000 app:app &
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
      LaunchConfigurationName: !Ref LaunchConfiguration
      DesiredCapacity: 1
      MaxSize: 1
      MinSize: 1
      LoadBalancerNames:
        - !Ref LoadBalancer
      Tags:
        - Key: Name
          Value: MythicalMysfitsAPI
          PropagateAtLaunch: True
